name: Job artifacts and outputs
on:
  push:
    branches:
      - main
    paths-ignore:
      - .github/workflows/*  
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
        working-directory: ${{ github.workspace }}/01+Starting+Project
      - name: Lint code
        run: npm run lint
        working-directory: ${{ github.workspace }}/01+Starting+Project
      - name: Test code
        run: npm run test
        working-directory: ${{ github.workspace }}/01+Starting+Project
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.getFileName.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
        working-directory: ${{ github.workspace }}/01+Starting+Project
      - name: Build website
        run: npm run build
        working-directory: ${{ github.workspace }}/01+Starting+Project
      - name: publish JS filename
        id: getFileName
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
        working-directory: ${{ github.workspace }}/01+Starting+Project
      - name: Publish artifact
        uses: actions/upload-artifact@v4
        with:
          name: npm-artifact
          path: |
            ${{ github.workspace }}/01+Starting+Project/dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: get artifact
        uses: actions/download-artifact@v4
        with:
          name: npm-artifact
      - name: Output contents
        run: echo ${{ needs.build.outputs.script-file }}
      - name: Deploy - output contents
        run: |
          ls
          echo "Deploying..."